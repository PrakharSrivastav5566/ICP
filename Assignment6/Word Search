class Solution {
public:
    bool helper(vector<vector<char>>& board, string word, int i, int j, int idx) {
        if(idx == word.size()-1)
            return true;

        char temp=board[i][j];
        board[i][j]='*';
        int dir[4][2]={{-1,0}, {0,-1}, {1,0}, {0,1}};
        for(auto& e: dir) {
            int x=i+e[0], y=j+e[1];
            if(x>=0 && x<board.size() && y>=0 && y<board[0].size() && idx+1<word.size()) {
                if(board[x][y]==word[idx+1])
                    if(helper(board, word, x, y, idx+1))
                    return true;
            }
        }
        board[i][j]=temp;
        return false;
    }

    bool exist(vector<vector<char>>& board, string word) {
        for(int i=0;i<board.size();i++) {
            for(int j=0;j<board[0].size();j++) {
                if(board[i][j]==word[0] && helper(board, word, i, j, 0))
                    return true;
            }
        }
        return false;
    }
};
